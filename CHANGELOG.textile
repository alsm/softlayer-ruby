*3.2.3*
* Support for profiles.
* Support for HVM.


*3.2.2*
* Fix NoMethodError when getting the datacenters out of an ImageTemplate and the value was nil.
* Fix NoMethodError when getting public and private images with a result limit of 1.

*3.2.1*
* Fix a crashing issue where a Bare Metal server order tried to retrieve the hardware ordered before it has been provisioned.

*3.2*
* Add password-based authentication with `SoftLayer::Client.with_password(username: '...', password: '...', ...)`.

*3.1.0*
* Many SoftLayer Attributes are now shadowed with snake_case names.  The old CamelCase versions are deprecated and will be removed in the next major release
* New functionality related to network monitoring has been added

*3.0*
* Substantially rewrote the ObjectFilter class. ObjectFilters used to be hashes which made it easy to manipulate their content incorrectly. The new implementation has a strict interface that makes it harder to manipulate filters incorrectly.
* Added a model for Virtual Server Image Templates (SoftLayer::ImageTemplate) - VirtualServerOrder now requires an instance of this class rather than allowing you to provide the global_id of an image
* Added a model for data centers (SoftLayer::Datacenter). Bare Metal, Bare Metal Package, and Virtual server orders now use an instance of Datacenter to identify where their servers will be provisioned. The routines in those classes which used to provide lists of valid data center names now return data center objects.
* Virtual Server Upgrades are now handled by the VirtualServerUpgradeOrder class and not the VirtualServer class. This change was made for several reasons. Firt and foremost, it allows multiple aspects of a virtual server to be upgraded at once without having to wait on separate transactions to complete between upgrades. Secondly it opens the door for additional upgrades (for example, to disk configuration) to be added in the future.
* Added a method to reboot servers.
* The routine to retreive the open tickets on an account has been moved from the Ticket class. The set of open tickets is now a dynamic property of an account object.
* The Model Layer now includes models for Server (aka. Shared) and VLAN (aka. Dedicated) firewalls in the ServerFirewall, and VLANFireall classes respectively.  There are corresponding classes for ordering firewalls (ServerFirewallOrder and VLANFirewallOrder).  To facilitate the process of locating the 'id' for a firewall, the Account class includes the find_VLAN_with_number routine which lets you look up the segments of a firewall from the VLAN nubmer.

*2.2.2*
* Fixed a bug in BareMetalServerOrder_Package.rb where the order template did not use an array for the "hardware" key.  This lead to an order template that would be accepted by verifyOrder, but rejected by placeOrder.  An internal issue to review verifyOrder has also been generated. (reported by Rohit Singh)

*2.2*
* Added the ability to set a timout for network requests. The timeout is given when a client is created by passing the :timeout hash parameter when creating a client. The value of the parameter is an integer number of seconds.
* Fixed a bug in VirtualServer#capture_image

*2.1.1*
* Virtual server upgrades no longer raise exceptions
* Formalized the RDoc documentation process. Added overview and welcome documentation and changed the README so it directs folks to the new documentation.

*2.1.0*
* Began implementing a model framework that allows Ruby developers to work with elements in the SoftLayer API in a more object-oriented fashion. The first release of this framework includes the Ticket, VirtualServer, and BareMetalServer classes.

*2.0.1*
* Fix broken gem configparser dependency

*2.0.0*
* Switched the Ruby API client to use XML-RPC when calling the SoftLayer API rather than using the REST-like interface.
* Result limits are now specified using @result_limit(offset,limit)@.
The @result_offset@ API filter has been removed.
* The @object_mask@ call modifier no longer accepts Ruby structures. It accepts strings that are Object Masks in the "Extended Object Mask":http://sldn.softlayer.com/article/Object-Masks format.
* Changed the mechanism for obtaining services to include the Client class. This makes the Ruby API very similar to the API presented by the Python bindings. The old mechanism for obtaining services still works to preserve backward compatibility but you will receive deprecation warnings in debug mode.

*1.0.8*
* Set a default User-Agent string to be sent with all requests to SoftLayer API. Provide interface to set a custom User-Agent string.

*1.0.7*
* Calls to the @getObject@ method of any service should not take parameters. The gem now warns if you make this type of call and ignores the parameters. This prevents @SoftLayer_Virtual_Guest::getObject@ from accidentally creating (billable) VirtualServer instances.

*1.0.6*
* Make all API calls with either a @GET@ or a @POST@ as the HTTP verb.

*1.0.5*
* Fixed a bug where empty hashes and empty arrays would not generate meaningful object masks

*1.0.4*
* Fixed a bug where the @result_limit@ and @result_offset@ object filters were just not working.

*1.0.3*
* Added a request filter to add result limits to request. Submitted by JN. Thanks!

*1.0.2*
* We have some API routines that start with 'get' but expect arguments anyway. The code now uses HTTP POST to send requests for which the user has provided arguments regardless of the name of the routine.

*1.0*, *1.0.1*
* Initial release of the gem
